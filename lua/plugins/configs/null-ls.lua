local M = {}

M.opts = {
  debug = true,
  sources = {},
}

function M.loaded_callback(config)
  local builtins = require("null-ls.builtins")
  local installed_packages =
    require("mason-registry").get_installed_package_names()

  local function add_source(type, server)
    server = string.gsub(server, "-", "_")
    table.insert(config.opts.sources, builtins[type][server])
  end

  for _, server in ipairs(installed_packages) do
    if vim.tbl_contains(config.supported_formatters, server) then
      add_source("formatting", server)
    elseif vim.tbl_contains(config.supported_diagnostics, server) then
      add_source("diagnostics", server)
    end
  end

  require("null-ls").setup(config.opts)
end

M.supported_formatters = {
  "asmfmt",
  "autoflake",
  "autopep8",
  "beautysh",
  "biome",
  "black",
  "blade-formatter",
  "blue",
  "buf",
  "buildifier",
  "cbfmt",
  "clang-format",
  "csharpier",
  "cueimports",
  "djlint",
  "docformatter",
  "dprint",
  "elm-format",
  "fantomas",
  "fixjson",
  "fourmolu",
  "gersemi",
  "gofumpt",
  "goimports",
  "goimports-reviser",
  "golines",
  "google-java-format",
  "htmlbeautifier",
  "isort",
  "joker",
  "jq",
  "jsonnetfmt",
  "ktlint",
  "latexindent",
  "markdown-toc",
  "markdownlint",
  "mdformat",
  "ocamlformat",
  "phpcbf",
  "pint",
  "prettier",
  "prettierd",
  "pretty-php",
  "pyink",
  "reorder-python-imports",
  "rubocop",
  "rubyfmt",
  "rufo",
  "rustywind",
  "shellharden",
  "shfmt",
  "sql-formatter",
  "sqlfmt",
  "standardjs",
  "standardrb",
  "stylua",
  "usort",
  "yamlfix",
  "yamlfmt",
  "yapf",
  "zprint",
}

M.supported_diagnostics = {
  "actionlint",
  "alex",
  "ansible-lint",
  "biome",
  "bslint",
  "buf",
  "buildifier",
  "cfn-lint",
  "checkmake",
  "checkstyle",
  "clj-kondo",
  "codespell",
  "commitlint",
  "cpplint",
  "cspell",
  "curlylint",
  "detekt",
  "djlint",
  "easy-coding-standard",
  "editorconfig-checker",
  "erb-lint",
  "eslint_d",
  "flake8",
  "gdtoolkit",
  "gitleaks",
  "gitlint",
  "glint",
  "golangci-lint",
  "gospel",
  "hadolint",
  "haml-lint",
  "htmlhint",
  "joker",
  "jsonlint",
  "kcl",
  "ktlint",
  "luacheck",
  "markdownlint",
  "markdownlint-cli2",
  "markuplint",
  "misspell",
  "mypy",
  "nilaway",
  "oelint-adv",
  "oxlint",
  "phpcs",
  "phpmd",
  "phpstan",
  "proselint",
  "protolint",
  "pydocstyle",
  "pyflakes",
  "pylama",
  "pylint",
  "pyproject-flake8",
  "pyre",
  "revive",
  "rstcheck",
  "rubocop",
  "ruff",
  "selene",
  "semgrep",
  "shellcheck",
  "shellharden",
  "snyk",
  "solhint",
  "sonarlint-language-server",
  "sqlfluff",
  "standardjs",
  "standardrb",
  "staticcheck",
  "stylelint",
  "textlint",
  "tflint",
  "tfsec",
  "tlint",
  "trivy",
  "trufflehog",
  "ts-standard",
  "twigcs",
  "typos",
  "vacuum",
  "vale",
  "verible",
  "vint",
  "vulture",
  "woke",
  "write-good",
  "yamllint",
}

return M
